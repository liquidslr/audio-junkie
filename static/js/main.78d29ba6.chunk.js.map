{"version":3,"sources":["components/actions.js","components/recorder/waveEncoder.js","components/recorder/getUserMedia.js","components/recorder/AudioContext.js","components/recorder/waveInterface.js","components/recorder/downloadBlob.js","components/recorder/AudioRecorder.js","components/conversation.js","components/card.js","components/app.js","serviceWorker.js","components/reducer.js","reducers/index.js","index.js","configureStore.js"],"names":["ActionType","keymirror","SET_RECORDING","REMOVE_RECORDING","writeUTFBytes","dataview","offset","string","i","length","setUint8","charCodeAt","mergeBuffers","buffer","result","Float64Array","inner","set","interleave","left","right","inputIndex","getUserMedia","navigator","mediaDevices","arg","successCallback","errorCallback","then","catch","webkitGetUserMedia","mozGetUserMedia","AudioContext","WAVEInterface","recordingNodes","Promise","resolve","reject","audio","stream","audioContext","recGainNode","createGain","recSourceNode","createMediaStreamSource","recProcessingNode","createScriptProcessor","bufferSize","encodingCache","onaudioprocess","event","channel","inputBuffer","getChannelData","buffers","push","Float32Array","connect","destination","recordingStream","err","this","getTracks","stop","disconnect","loop","onended","reader","FileReader","readAsArrayBuffer","audioData","onloadend","decodeAudioData","source","createBufferSource","start","playbackNode","stopRecording","bufferLength","sampleRate","volume","interleaved","ArrayBuffer","view","DataView","setUint32","setUint16","forEach","sample","index","setInt16","Blob","type","encodeWAV","downloadBlob","blob","filename","url","window","URL","createObjectURL","click","document","createEvent","initEvent","link","createElement","href","download","dispatchEvent","AudioRecorder","waveInterface","state","isRecording","isPlaying","props","initialAudio","onAudioEnded","setState","onEnded","onRemoveClick","id","recorder","reset","onChange","duration","removeRecording","onDownloadClick","onButtonClick","stopPlayback","preventDefault","startPlayback","startRecording","nextProps","onRecordStart","setRecording","audioDuration","onPlay","onAbort","className","join","onClick","playLabel","playingLabel","recordLabel","recordingLabel","removeLabel","downloadable","downloadLabel","Component","dispatch","details","payload","defaultProps","style","Conversation","disabled","change","e","input","target","value","text","item","padding","placeholder","CustomCard","concatenateBlobs","blobs","callback","byteLength","console","log","tmp","Uint16Array","lastOffset","reusableByteLength","slice","concatenateBuffers","onload","recording","toString","obj","recordings","blob1","blob2","deleteItem","key","extra","negative","App","items","addSnippet","arr","delete","indexOf","splice","map","class","aria-hidden","Boolean","location","hostname","match","initialState","isEmpty","hasOwnProperty","combineReducers","action","user","store","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","reducers","configureStore","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.78d29ba6.chunk.js","sourcesContent":["import keymirror from \"keymirror\";\n\nexport const ActionType = keymirror({\n  SET_RECORDING: null,\n  REMOVE_RECORDING: null,\n});\n\nexport const setRecording = (details) => {\n  return (dispatch) => {\n    dispatch({ type: ActionType.SET_RECORDING, payload: details });\n  };\n};\n\nexport const removeRecording = (details) => {\n  return (dispatch) => {\n    dispatch({ type: ActionType.REMOVE_RECORDING, payload: details });\n  };\n};\n","function writeUTFBytes(dataview, offset, string) {\n  for (let i = 0; i < string.length; i++) {\n    dataview.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nfunction mergeBuffers(buffer, length) {\n  const result = new Float64Array(length);\n  let offset = 0;\n  for (let i = 0; i < buffer.length; i++) {\n    const inner = buffer[i];\n    result.set(inner, offset);\n    offset += inner.length;\n  }\n  return result;\n}\n\nfunction interleave(left, right) {\n  const length = left.length + right.length;\n  const result = new Float64Array(length);\n  let inputIndex = 0;\n  for (let i = 0; i < length; ) {\n    result[i++] = left[inputIndex];\n    result[i++] = right[inputIndex];\n    inputIndex++;\n  }\n  return result;\n}\n\nexport default function encodeWAV(\n  buffers,\n  bufferLength,\n  sampleRate,\n  volume = 1\n) {\n  const left = mergeBuffers(buffers[0], bufferLength);\n  const right = mergeBuffers(buffers[1], bufferLength);\n  const interleaved = interleave(left, right);\n  const buffer = new ArrayBuffer(44 + interleaved.length * 2);\n  const view = new DataView(buffer);\n\n  writeUTFBytes(view, 0, \"RIFF\");\n  view.setUint32(4, 44 + interleaved.length * 2, true);\n  writeUTFBytes(view, 8, \"WAVE\");\n  writeUTFBytes(view, 12, \"fmt \");\n  view.setUint32(16, 16, true);\n  view.setUint16(20, 1, true);\n  view.setUint16(22, 2, true);\n  view.setUint32(24, sampleRate, true);\n  view.setUint32(28, sampleRate * 4, true);\n  view.setUint16(32, 4, true);\n  view.setUint16(34, 16, true);\n\n  writeUTFBytes(view, 36, \"data\");\n  view.setUint32(40, interleaved.length * 2, true);\n\n  interleaved.forEach((sample, index) => {\n    view.setInt16(44 + index * 2, sample * (0x7fff * volume), true);\n  });\n\n  return new Blob([view], { type: \"audio/wav\" });\n}\n","let getUserMedia;\n\nif (navigator.mediaDevices) {\n  getUserMedia = (arg, successCallback, errorCallback) => {\n    navigator.mediaDevices\n      .getUserMedia(arg)\n      .then(successCallback)\n      .catch(errorCallback);\n  };\n} else {\n  getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia;\n}\n\nexport default getUserMedia;\n","export default AudioContext;\n","import encodeWAV from \"./waveEncoder\";\nimport getUserMedia from \"./getUserMedia\";\nimport AudioContext from \"./AudioContext\";\n\nexport default class WAVEInterface {\n  static audioContext = new AudioContext();\n  static bufferSize = 2048;\n  playbackNode;\n  recordingNodes = [];\n  recordingStream;\n  buffers; // one buffer for each channel L,R\n  encodingCache;\n\n  get bufferLength() {\n    return this.buffers[0].length * WAVEInterface.bufferSize;\n  }\n  get audioDuration() {\n    return this.bufferLength / WAVEInterface.audioContext.sampleRate;\n  }\n  get audioData() {\n    return (\n      this.encodingCache ||\n      encodeWAV(\n        this.buffers,\n        this.bufferLength,\n        WAVEInterface.audioContext.sampleRate\n      )\n    );\n  }\n\n  startRecording() {\n    return new Promise((resolve, reject) => {\n      getUserMedia(\n        { audio: true },\n        (stream) => {\n          const { audioContext } = WAVEInterface;\n          const recGainNode = audioContext.createGain();\n          const recSourceNode = audioContext.createMediaStreamSource(stream);\n          const recProcessingNode = audioContext.createScriptProcessor(\n            WAVEInterface.bufferSize,\n            2,\n            2\n          );\n          if (this.encodingCache) this.encodingCache = null;\n\n          recProcessingNode.onaudioprocess = (event) => {\n            if (this.encodingCache) this.encodingCache = null;\n            // save left and right buffers\n            for (let i = 0; i < 2; i++) {\n              const channel = event.inputBuffer.getChannelData(i);\n              this.buffers[i].push(new Float32Array(channel));\n            }\n          };\n\n          recSourceNode.connect(recGainNode);\n          recGainNode.connect(recProcessingNode);\n          recProcessingNode.connect(audioContext.destination);\n\n          this.recordingStream = stream;\n          this.recordingNodes.push(\n            recSourceNode,\n            recGainNode,\n            recProcessingNode\n          );\n          resolve(stream);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  }\n\n  stopRecording() {\n    if (this.recordingStream) {\n      this.recordingStream.getTracks()[0].stop();\n      delete this.recordingStream;\n    }\n    for (let i in this.recordingNodes) {\n      this.recordingNodes[i].disconnect();\n      delete this.recordingNodes[i];\n    }\n  }\n\n  startPlayback(loop = false, onended: () => void) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(this.audioData);\n      reader.onloadend = () => {\n        WAVEInterface.audioContext.decodeAudioData(reader.result, (buffer) => {\n          const source = WAVEInterface.audioContext.createBufferSource();\n          source.buffer = buffer;\n          source.connect(WAVEInterface.audioContext.destination);\n          source.loop = loop;\n          source.start(0);\n          source.onended = onended;\n          this.playbackNode = source;\n          resolve(source);\n        });\n      };\n    });\n  }\n\n  stopPlayback() {\n    this.playbackNode.stop();\n  }\n\n  reset() {\n    if (this.playbackNode) {\n      this.playbackNode.stop();\n      this.playbackNode.disconnect(0);\n      delete this.playbackNode;\n    }\n    this.stopRecording();\n    this.buffers = [[], []];\n  }\n}\n","export default function downloadBlob(blob, filename) {\n  const url = window.URL.createObjectURL(blob);\n  const click = document.createEvent(\"Event\");\n  click.initEvent(\"click\", true, true);\n\n  const link = document.createElement(\"A\");\n  link.href = url;\n  link.download = filename;\n  link.dispatchEvent(click);\n  link.click();\n  return link;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setRecording, removeRecording } from \"../actions\";\n\nimport WAVEInterface from \"./waveInterface\";\nimport downloadBlob from \"./downloadBlob\";\n\nimport \"../styles/app.css\";\n\n\nclass AudioRecorder extends Component {\n  waveInterface = new WAVEInterface();\n\n  state = {\n    isRecording: false,\n    isPlaying: false,\n    audioData: this.props.initialAudio,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    // handle new initialAudio being passed in\n    if (\n      nextProps.initialAudio &&\n      nextProps.initialAudio !== this.props.initialAudio &&\n      this.state.audioData &&\n      nextProps.initialAudio !== this.state.audioData\n    ) {\n      this.waveInterface.reset();\n      this.setState({\n        audioData: nextProps.initialAudio,\n        isPlaying: false,\n        isRecording: false,\n      });\n    }\n  }\n\n  componentWillMount() {\n    this.waveInterface.reset();\n  }\n  componentWillUnmount() {\n    this.waveInterface.reset();\n  }\n\n  startRecording() {\n    if (!this.state.isRecording) {\n      this.waveInterface\n        .startRecording()\n        .then(() => {\n          this.setState({ isRecording: true });\n          if (this.props.onRecordStart) this.props.onRecordStart();\n        })\n        .catch((err) => {\n          throw err;\n        });\n    }\n  }\n\n  stopRecording() {\n    const { id, recorder } = this.props;\n    this.waveInterface.stopRecording();\n\n    this.setState({\n      isRecording: false,\n      audioData: this.waveInterface.audioData,\n    });\n\n    this.props.setRecording([id, recorder, this.waveInterface.audioData]);\n\n    if (this.props.onChange) {\n      this.props.onChange({\n        duration: this.waveInterface.audioDuration,\n        audioData: this.waveInterface.audioData,\n      });\n\n      this.props.setRecording([id, recorder, this.waveInterface.audioData]);\n    }\n  }\n\n  startPlayback() {\n    if (!this.state.isPlaying) {\n      this.waveInterface\n        .startPlayback(this.props.loop, this.onAudioEnded)\n        .then(() => {\n          this.setState({ isPlaying: true });\n          if (this.props.onPlay) this.props.onPlay();\n        });\n    }\n  }\n\n  stopPlayback() {\n    this.waveInterface.stopPlayback();\n    this.setState({ isPlaying: false });\n    if (this.props.onAbort) this.props.onAbort();\n  }\n\n  onAudioEnded = () => {\n    this.setState({ isPlaying: false });\n    if (this.props.onEnded) this.props.onEnded();\n  };\n\n  onRemoveClick = () => {\n    const { id, recorder } = this.props;\n\n    this.waveInterface.reset();\n    if (this.state.audioData && this.props.onChange)\n      this.props.onChange({ duration: 0, audioData: null });\n    this.setState({\n      isPlaying: false,\n      isRecording: false,\n      audioData: null,\n    });\n    this.props.removeRecording([id, recorder]);\n  };\n\n  onDownloadClick = () => {\n    downloadBlob(this.state.audioData, this.props.filename);\n  };\n\n  onButtonClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    if (this.state.audioData) {\n      if (this.state.isPlaying) {\n        this.stopPlayback();\n        event.preventDefault();\n      } else {\n        this.startPlayback();\n      }\n    } else {\n      if (this.state.isRecording) {\n        this.stopRecording();\n      } else {\n        this.startRecording();\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"AudioRecorder\">\n        <button\n          className={[\n            \"AudioRecorder-button control-btn\",\n            this.state.audioData ? \"hasAudio\" : \"\",\n            this.state.isPlaying ? \"isPlaying\" : \"\",\n            this.state.isRecording ? \"isRecording\" : \"\",\n          ].join(\" \")}\n          onClick={this.onButtonClick}\n        >\n          {this.state.audioData &&\n            !this.state.isPlaying &&\n            this.props.playLabel}\n          {this.state.audioData &&\n            this.state.isPlaying &&\n            this.props.playingLabel}\n          {!this.state.audioData &&\n            !this.state.isRecording &&\n            this.props.recordLabel}\n          {!this.state.audioData &&\n            this.state.isRecording &&\n            this.props.recordingLabel}\n        </button>\n        {this.state.audioData && (\n          <button className=\"AudioRecorder-remove control-btn\" onClick={this.onRemoveClick}>\n            {this.props.removeLabel}\n          </button>\n        )}\n        {this.state.audioData && this.props.downloadable && (\n          <button\n            className=\"AudioRecorder-download control-btn\"\n            onClick={this.onDownloadClick}\n          >\n            {this.props.downloadLabel}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default connect(null, (dispatch) => {\n  return {\n    setRecording: (details) => dispatch(setRecording(details)),\n    removeRecording: (details) => dispatch(removeRecording(details)),\n  };\n})(AudioRecorder);\n\nAudioRecorder.defaultProps = {\n  loop: false,\n  downloadable: true,\n  className: \"\",\n  style: {},\n  filename: \"output.wav\",\n  playLabel: \"🔊 Play\",\n  playingLabel: \"❚❚ Playing\",\n  recordLabel: \"● Record\",\n  recordingLabel: \"● Recording\",\n  removeLabel: \"↺ Re-record\",\n  downloadLabel: \"\\ud83d\\udcbe Save\", // unicode floppy disk\n};\n","import React, { Component } from \"react\";\n\nimport AudioRecorder from \"./recorder/AudioRecorder\";\nimport \"./styles/app.css\";\n\nexport default class Conversation extends Component {\n  state = {\n    disabled: false,\n  };\n\n  change = (e) => {\n    const { disabled } = this.state;\n    if (disabled) {\n      this.setState({ input: \"\" });\n      this.setState({ disabled: false });\n    }\n    this.setState({ input: e.target.value });\n  };\n\n  click = () => {\n    const { disabled } = this.state;\n    if (disabled) {\n      this.setState({ input: \"\" });\n      this.setState({ disabled: false });\n    }\n  };\n\n  startRecording = () => {\n    this.setState({ disabled: true });\n  };\n\n  render() {\n    const { input, disabled } = this.state;\n    const { text, item, type } = this.props;\n    return (\n      <div className=\"conv\">\n        <div className=\"margin1 title\">{text}</div>\n        <div onClick={this.click}>\n          <textarea\n            value={input}\n            disabled={disabled}\n            onChange={this.change}\n            style={{ padding: \"1rem\" }}\n            className=\"margin1\"\n            placeholder=\"Enter input\"\n          />\n        </div>\n        {input && (\n          <AudioRecorder\n            onChange={this.startRecording}\n            id={item}\n            recorder={type}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Conversation from \"./conversation\";\nimport downloadBlob from \"./recorder/downloadBlob\";\n\nimport \"./styles/app.css\";\n\nclass CustomCard extends Component {\n  concatenateBlobs = (blobs, type, callback) => {\n    var buffers = [];\n    var index = 0;\n\n    //  readAsArrayBuffer\n    function readAsArrayBuffer() {\n      if (!blobs[index]) {\n        return concatenateBuffers();\n      }\n      var reader = new FileReader();\n      reader.onload = function (event) {\n        buffers.push(event.target.result);\n        index++;\n        readAsArrayBuffer();\n      };\n      reader.readAsArrayBuffer(blobs[index]);\n    }\n\n    readAsArrayBuffer();\n    function concatenateBuffers() {\n      var byteLength = 0;\n\n      buffers.forEach(function (buffer) {\n        console.log(buffer.byteLength, \"bytelength\");\n        byteLength += buffer.byteLength;\n      });\n\n      console.log(byteLength, \"length\");\n\n      var tmp = new Uint16Array(byteLength);\n      var lastOffset = 0;\n      buffers.forEach(function (buffer) {\n        // BYTES_PER_ELEMENT == 2 for Uint16Array\n        var reusableByteLength = buffer.byteLength;\n        if (reusableByteLength % 2 != 0) {\n          buffer = buffer.slice(0, reusableByteLength - 1);\n        }\n        tmp.set(new Uint16Array(buffer), lastOffset);\n        lastOffset += reusableByteLength;\n      });\n\n      var blob = new Blob([tmp.buffer], {\n        type: type,\n      });\n\n      callback(blob);\n    }\n  };\n\n  download = (item) => {\n    const { recording } = this.props;\n    let id = item.toString();\n    let obj = recording.recordings[id];\n    let blob1 = obj[\"bot\"];\n    let blob2 = obj[\"customer\"];\n\n    this.concatenateBlobs([blob2, blob1], \"audio/wav\", (blob) => {\n      downloadBlob(blob, \"combined-audio\");\n    });\n  };\n\n  render() {\n    const { item, deleteItem } = this.props;\n    return (\n      <div key={item} className=\"snippet\">\n        <div className=\"heading\">Snippet {item} </div>\n        <Conversation item={item} text=\"bot\" type=\"bot\" />\n        <Conversation item={item} text=\"customer\" type=\"customer\" />\n        <div className=\"content\" extra>\n          <button onClick={() => this.download(item)} className=\"download btn\">\n            Download\n          </button>\n          <button\n            className=\"delete btn\"\n            negative\n            onClick={() => this.props.deleteItem(item)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => {\n  return {\n    recording: state.recordings,\n  };\n}, null)(CustomCard);\n","import React, { Component } from \"react\";\n\nimport CustomCard from \"./card\";\nimport \"./styles/app.css\";\n\nclass App extends Component {\n  state = {\n    items: [1],\n  };\n\n  addSnippet = () => {\n    const { items } = this.state;\n    let arr = items;\n    arr.push(arr[arr.length - 1] + 1 || 1);\n    this.setState({ items: arr });\n  };\n\n  delete = (id) => {\n    const { items } = this.state;\n    let arr = items;\n    const index = arr.indexOf(id);\n    if (index > -1) {\n      arr.splice(index, 1);\n    }\n    this.setState({ items: arr });\n  };\n\n  render() {\n    const { items } = this.state;\n    return (\n      <div className=\"App\">\n        {items.map((item) => (\n          <CustomCard deleteItem={this.delete} item={item} />\n        ))}\n        <div className=\"snippet\">\n          <div className=\"center\" onClick={this.addSnippet}>\n            <div>\n              <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n              {\"  \"}\n              Add snippet\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable import/prefer-default-export */\nimport { ActionType } from \"./actions\";\n\nconst initialState = {\n  recordings: {},\n};\n\nfunction isEmpty(obj) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nexport function RecordingReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.SET_RECORDING: {\n      const id = action.payload[0];\n      const user = action.payload[1];\n      const recording = action.payload[2];\n      const obj = initialState.recordings;\n\n      if (isEmpty(obj[id])) {\n        obj[id] = {};\n      }\n      obj[id][user] = recording;\n      return {\n        ...state,\n        recordings: obj,\n      };\n    }\n\n    case ActionType.REMOVE_RECORDING: {\n      const id = action.payload[0];\n      const user = action.payload[1];\n      const obj = initialState.recordings;\n\n      obj[id][user] = null;\n      return {\n        ...state,\n        recordings: obj,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","/* eslint-disable import/extensions */\nimport { combineReducers } from \"redux\";\nimport { RecordingReducer } from \"../components/reducer\";\n\nexport default combineReducers({\n  recordings: RecordingReducer,\n});\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-named-as-default-member */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\n\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\nwindow.store = store;\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport reducers from './reducers'\n\nconst configureStore = () => {\n  const composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n      : compose\n\n  const enhancer = composeEnhancers(\n    applyMiddleware(thunk)\n    // other store enhancers if any\n  )\n  const store = createStore(reducers, enhancer)\n\n  // const store = createStore(reducers, applyMiddleware(thunk))\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (module.hot) {\n      module.hot.accept('./reducers', () => {\n        store.replaceReducer(reducers)\n      })\n    }\n  }\n\n  return store\n}\n\nexport default configureStore\n"],"sourceRoot":""}